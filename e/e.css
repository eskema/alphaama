#e
{
  grid-area: e;
}

#notes
{
  background: rgb(var(--color-b));
  z-index: 0;
}

.note
{
  --who: attr(data-who);
  align-self: stretch;
  background: rgb(var(--color-b));
  border-left: 1px dotted rgba(var(--color-c),1);
  border-top: 1px dotted rgba(var(--color-c),1);
  box-sizing: border-box;
  display: grid;
  grid-template-areas: 
  "by       by"
  "content  content"
/*  "after    after"*/
  "opentags opentags"
  "tags     after"
  "versions versions"
  "replies  replies"
  ;
  grid-template-columns: auto 1fr;
  grid-template-rows: auto 1fr auto;
  margin: var(--pad) 0;
  position: relative;
  z-index: 1;
}

.note.root.solo,
.note.root:not(.in_path),
.note.in_view > .replies > .note,
.versions > .note,
.haz_solo .note.root.in_path:not(.in_view):not(.tiny),
#notes > .note:not(.root):not(.in_path)
{
  grid-template-columns: auto 1fr 61.8vw;
  grid-template-areas: 
  "by       by       by"
  "content  content  replies"
  /*"after    after    replies"*/
  "opentags opentags replies"
  "tags     after  replies"
  "versions versions versions"
  "sig      sig      sig"
  ;
}

.note.draft
{
  border-left: 1px dashed rgba(var(--color-main),1);
  border-top: 1px dashed rgba(var(--color-main),1);
}

.note.in_path.in_view
{
  border-color: rgb(var(--color-e));
  grid-template-areas: 
  "by by"
  
  "content content"
  "tags tags"
  "opentags opentags"
  "sig sig"
  "after after"
  /*"actions actions"*/
  "replies replies"
  ;
  grid-template-columns: 1fr 61.8vw;
  margin: 0;
}

.note.root:not(.in_path):first-child,
.note.reply:nth-child(2),
.note.in_path.haz_new_reply,
.replies:not(.expanded) .note:not(.is_new).haz_new_reply
{
  margin-top: 0;
}

.note.reply:last-child
{
  margin-bottom: 0;
}

.haz_solo .note:not(.in_path),
.note.root:not(.in_path).out,
.note.out 
{
  border: none!important;
  margin: 0;
}

html:not(.view_e) .replies:not(.expanded) .note:not(.is_new):not(.haz_new_reply)
{
  border-left: 1px dotted rgba(var(--c),1);
  border-top: 1px dotted rgba(var(--c),1);
  margin: 0;
}

.note::after
{
  background: rgb(var(--color-b));
  color: rgb(var(--color-c));
  content: attr(data-seen) " - " attr(data-subs);
  font-size: var(--font-size-xs);
  grid-area: after;
  padding: var(--padm);
  position: relative;
}

.note.in_view::after
{
  color: rgb(var(--color-d));
  display: block;
  font-size: var(--font-size-s);
  padding: var(--padm);
  text-align: right;
  z-index: unset;
}

.root.not_yet > .replies > .note,
.note.out::after,
.note.out::before,
.note.out > *:not(.replies),
.note:not(.in_view) > .sig,

.viewing .note.in_path:not(.in_view)::after,

.haz_solo .note:not(.in_path)::after,
.haz_solo .note:not(.in_path)::before,
.haz_solo .note:not(.in_path) > *:not(.replies),

.in_view > .replies:not(.expanded) > .note:not(.is_new):not(.has_new) > *:not(.replies),

/*.replies:not(.expanded) > .note:not(.in_path),*/

.view_e .note:not(.in_path),
.view_p .note:not(.in_path),
.view_e #notes > .note:not(.in_path),

#e:not(.expanded) .note:not(.in_path)
{
  display: none;
}

.view_e .note.in_view.in_path .note,
#e:not(.expanded) .note.in_view .note
{
  display: grid;
}

#e.expanded #notes > .note:last-child
{
  margin-bottom: var(--line);
}

.sig 
{
  background: rgb(var(--color-b));
  color: rgb(var(--color-c));
  font-size: var(--font-size-xs);
  grid-area: sig;
  margin-bottom: 0;
  overflow-x: hidden;
  overflow-x: scroll;
  padding: var(--pad) var(--pad) 0 var(--pad);
  text-align: right;
}


/* @group by */

.by
{
  align-self: center;
  align-content: center;
  background: rgb(var(--color-b));
  display: grid;
  font-size: var(--font-size-s);
  grid-area: by;
  grid-template-areas: "author actions id created_at clas ";
  grid-template-columns: auto auto 1fr auto;
  line-height: 1rem;
  z-index: 1;
}

.note.draft .by::after,
.note.not_sent .by::after
{
  color: rgb(var(--color-main));
  grid-area: clas;
  padding: 0 var(--padm);
}

.note.draft .by::after
{
  content: 'draft';
}

.note.not_sent .by::after
{
  content: 'not_sent';
}

.in_view > .by,
.haz_solo .root.in_path:not(.in_view) > .by,
.root:not(.in_view):not(.in_path) > .by
{
  position: sticky;
  top: 0;
  z-index: 10;
}

.replies > .note:not(.in_path) > .by
{
  position: sticky;
  top: calc(var(--line) + var(--padm) + 1px);
}

.in_view .replies .note .by
{
  position: sticky;
  top: calc(var(--line)  + var(--pad) - 2px);
}

.in_view > .replies > .note > .by
{
  position: sticky;
  top: calc(var(--line) + var(--line) - var(--padm) - 2px);
  z-index: 3;
}

.by > .tiny
{
  align-content: center;
  grid-area: x;
  line-height: 1;
}

/* @end */


/* @group a.author */

a.author 
{
  color: rgb(var(--color-d));
  grid-template-areas: "img name nip5 flw";
  overflow-x: scroll;
  text-decoration: none;
  user-select: none;
}

.author::before
{
  content: "";
}

.a.author.has-picture img,
.author::before
{
  background: rgb(var(--c));
  display: block;
  grid-area: img;
  height: 1rem; 
  object-fit: cover;
  padding: 0;
  pointer-events: none;
  width: 1rem;
}

.by .author::after,
.pubkey .author::after,
.note_quote_by .author::after
{
  align-content: center;
  align-self: stretch;
  color: rgb(var(--color-d));
  content: attr(data-followers);
  display: block;
  grid-area: flw;
  padding: 0 var(--padm);
  word-break: keep-all;
  white-space: pre;
}

.by .author.is_mf::after,
.pubkey .author.is_mf::after,
.note_quote_by .author.is_mf::after
{
  color: rgb(var(--color-no));
}

.by .author.is_u::after,
.pubkey .author.is_u::after,
.note_quote_by .author.is_u::after
{
  color: rgb(var(--color-yes));
}

.author .name 
{
  /*background-color: rgb(var(--color-b));*/
  grid-area: name;
  padding: 0 var(--padm);
}

.author .name.empty::before
{
  content: attr(title)!important;
}

.author .name[data-petname]::after 
{
  align-self: center;
  color: rgb(var(--color-c));
  content: "(" attr(data-petname) ")";
  font-size: var(--font-size-s);
  margin-left: var(--pad);
}

.by .author
{
  grid-area: author;
}

.paragraph > a.author
{
  border-bottom: 1px solid rgb(var(--c));
  border-top: 1px solid transparent;
}

.paragraph > a.author .name
{
  padding: 0;
  margin: 0;
}

.paragraph > a.author .picture,
.paragraph > a.author::before,
.paragraph > a.author .name:not(.empty)::after
{
  display: none;
}

.in_view > .by .author
{
  color: rgb(var(--color-d));
  grid-template-areas: "img name flw" "img nip5 flw"
}

.in_view > .by .author::before
{
  height: 2rem;
  width: 2rem;
  grid-area: img;
}

.in_view > .by .author .picture
{
  height: var(--line);
  width: var(--line);
}

.in_view > .by .author .name
{
  align-self: start;
  display: grid;
  grid-template-areas: "name petname" "nip5 nip5";
}

.in_view > .by .author .name[data-nip05]::before
{
  color: rgb(var(--color-d));
  content: attr(data-nip05);
  grid-area: nip5;
}

.in_view > .by .author .name::after
{
  display: block;
  grid-area: petname;
}

/* @end */


/* @group id */

.id 
{
  background-color: rgba(var(--c),1);
  box-sizing: border-box;
  display: grid;
  grid-area: id;
  grid-template-areas: "nid xid";
  grid-template-columns: 2fr 1fr;
  line-height: 1rem;
  margin: 0;
  opacity: .21;
  overflow-x: scroll;
  word-break: keep-all;
}

.nid
{
  align-items: center;
  grid-area: nid;
  /*grid-template-columns: 1fr;*/
  line-height: 1;
  /*justify-self: stretch;*/
  padding: 0 var(--padm);
  /*text-align: right;*/
  text-decoration: none;
  user-select: none;
  white-space: pre;
  word-break: keep-all;
  /*font-size: 0;*/
}

.nid::before
{
  content: "-> ";
  font-size: var(--font-size-s);
}

[data-luma="light"] > .by .id *
{
  color: rgb(var(--color-dark));
}

[data-luma="dark"] > .by .id *
{
  color: rgb(var(--color-light));
}

.xid
{
  align-self: center;
  background: 
  rgba(var(--color-b),1),
  rgba(var(--color-c),1);
  grid-area: xid;
  padding: 0 var(--padm);
}

.in_view > .by .id
{
  opacity: 1;
  padding: 0 var(--padm);
}

.in_view > .by .nid
{
  /*font-size: 0;*/
  opacity: 1;
}

.in_view > .by .nid::before
{
  color: inherit;
  content: "<- ";
}

.in_view > .by .xid
{
  display: block;
}

/* @end */


/* @group created_at */

.by .created_at 
{
  color: rgb(var(--color-d));
  cursor: pointer;
  display: grid;
  font-size: 0;
  grid-area: created_at;
  grid-template-areas: "elapsed";
  justify-items: end;
  justify-self: end;
  line-height: 1.5;
  padding: 0 var(--padm);
  white-space: pre;
  word-break: keep-all;
}

.by .created_at::after 
{
  content: "~" attr(data-elapsed);
  font-size: var(--font-size-s);
  grid-area: elapsed;
}

.in_view > .by .created_at
{
  align-content: center;
  font-size: var(--font-size-s);
  grid-gap: 0 var(--pad);
  grid-template-areas: "timestamp title elapsed";
}

.in_view > .by .created_at::before
{
  content: attr(title);
  grid-area: title;
}

/* @end */


/* @group content */

.content 
{
  align-self: start;
  box-sizing: border-box;
  color: rgb(var(--color-d));
  grid-area: content;
  max-height: calc(100vh - 8rem);  
  overflow: hidden;
  position: relative;
}

.viewing .root:not(.in_view) > .content,
.root:not(.in_view):not(.in_path) > .content
{
  overflow-y:  scroll;
}

.in_view > .replies > .note > .content,
.viewing .root:not(.in_path) > .content,
.root:not(.in_view):not(.in_path) > .content
{
  position: sticky;
  top: 1rem;
  z-index: 2;
}

.view_e .in_path:not(.in_view) > .content
{
  max-height: calc(12rem);
}

.in_view > .replies > .note > .content
{
  top: calc(var(--line) + var(--line) + var(--padm));
}

.in_view > .content
{
  display: grid;
  justify-content: center;
  max-height: unset;
  padding-top: var(--line);
  padding-bottom: var(--line);
}

.draft > .content
{
  max-height: unset;
}

.content > button
{
  line-height: var(--line);
}

.content .item > details > summary
{
  font-size: var(--font-size);
}

.content .item > details[open] > summary::before
{
  content: "";
}

.content .item > details[open] > summary::after
{
  content: ":";
}

.content .list .item .key
{
  color: rgb(var(--color-d));
  margin-right: var(--pad);
}

.note.mining > .content::after
{
  animation: loading 1s ease-in-out 0s infinite alternate;
  color: red!important;
  content: "mining in progress..."!important;
}

.hashtag
{
  font-weight: bold;
}

.note:not(.tiny):not(.in_path) > .content::after
{
  color: rgb(var(--color-c));
  content: "--";
  display: block;
  font-size: var(--font-size-xs);
  line-height: 1.5rem;
  margin-left: var(--pad);
  
}

/* @end */


/* @group paragraph */

.paragraph
{ 
  margin-bottom: 0;
  padding: var(--pad);
  white-space: pre-wrap;
  word-break: break-all;
}

.parsed > .paragraph
{
  hyphens: auto;
  word-break: break-word;
}

.paragraph.cypher,
.parsed > .paragraph,
.decrypted > .paragraph
{
  padding: var(--pad);
}

.paragraph.cypher
{
  color: rgb(var(--color-c));
  font-size: var(--font-size-xs)!important;
  line-height: 1!important;
  word-break: break-all;
}

.in_view > .content > .paragraph
{
  color: rgb(var(--color-d));
  font-size: var(--font-size-m);
  justify-self: stretch;
  line-height: calc(var(--font-size-m)*1.5);
  max-width: 80vw;
}

.view_e .in_path:not(.in_view) > .content .paragraph,
.view_e .in_path:not(.in_view) > .content .paragraph,
.replies:not(.expanded) .note:not(.is_new):not(.in_view).haz_new > .content .paragraph
{
  font-size: var(--font-size-s);
  line-height: 1rem;
  padding: 0 var(--pad);
}

.paragraph:first-child
{
  margin-top: var(--pad);
}

.paragraph:last-child
{
  margin-bottom: var(--pad);
}

/* @end */


/* @group links */

.content .content_link
{
  color: rgba(var(--color-sad),.6);
  margin-right: var(--padm);
}

.content .nostr_link
{
  color: rgba(var(--color-alt),.6);
}

.content .nostr_link::before
{
  color: rgb(var(--color-c));
  content: "#";
}

.content .nostr_link::after
{
  color: rgb(var(--color-c));
  content: "…";
}

/* @end */


/* @group img / video */

.content-img,
.content-video
{
  display: block;
  height: auto;
  max-height: var(--media-height);
  max-width: 100%;
  padding: var(--pad) 0;
}

.content .content-img
{
  cursor: zoom-in;
}

.in_view > .content .content-img
{
  justify-self: center;
  margin: var(--line) auto;
  max-height: var(--media-max-height);
}

.in_view > .content .content-video
{
  max-height: var(--media-max-height);
}

.in_view > .content .note_quote .content-img
{
  margin: 0 auto;
}

.view_e .note.in_path:not(.in_view) > .content .content-img,
.view_e .note.in_path:not(.in_view) > .content .content-video
{
  max-height: var(--size);
}

/* @end */


/* @group tags */

.tags_wrapper
{
  background: rgba(var(--color-b),.9);
  bottom: 4rem;
  grid-area: tags;
  overflow: hidden;
  position: sticky;
}

.tags_wrapper[open]
{
  grid-area: opentags;
  max-height: 50vh;
  overflow-y:  scroll;
  padding-bottom: var(--line);
  z-index: 2;
  /*background: red;*/
}

.tags_wrapper summary
{
  color: rgb(var(--color-d));
  font-size: 0;
  line-height: 1.5rem;
  padding: 0 var(--padm);
  transition: none;
}

.tags_wrapper[open] summary
{
  background: rgba(var(--color-b),.9);
  font-size: var(--font-size-s);
  padding-bottom: var(--pad);
  padding-top: var(--font-size);
  position: sticky;
  text-align: left;
  top: 0;
}

.tags_wrapper:not(.empty) summary::before,
.tags_wrapper:not(.empty) summary::after
{
  font-size: var(--font-size-s);
}

.tags_wrapper:not(.empty) summary::after
{
  content: "[" attr(data-count) "]";
  
}

.tags_wrapper[open]:not(.empty) summary::after
{
  content: ":";
}

.in_view > .tags_wrapper summary
{
  font-size: var(--font-size-s);
}

.in_view > .tags_wrapper:not(.empty):not([open]) summary::after
{
  content:":[" attr(data-count) "]";
}

/*.in_view > .tags_wrapper
{
  bottom: 0;
  max-height: unset;
  position: relative;
}

.in_view > .tags_wrapper > summary,
.in_view > .tags_wrapper[open] > summary
{
  text-align: center;
}

.in_view > .tags_wrapper .tags
{
  justify-content: center;
}*/

.view_e .in_path:not(.in_view) > .tags_wrapper,
.replies:not(.expanded) .note:not(.in_view):not(.is_new).haz_new_reply > .tags_wrapper
{
  display: none;
}

#notes > .note > .tags_wrapper
{
  z-index: 3;
}

.tags 
{
  display: grid;
  font-size: var(--font-size-s);
  list-style: none;
  margin: 0;
  padding: var(--pad);
}

.tag
{
  display: grid;
  grid-auto-flow: column;
  grid-gap: var(--pad);
  grid-template-columns: auto 1fr auto;
  overflow-x: scroll;
  white-space: pre;
}

.tag[data-i]::before
{
  align-self: end;
  content: "[" attr(data-i) "] ";
  line-height: 1rem;
}

.tag[data-i]::before,
.tag button
{
  color: rgba(var(--color-d),.8);
  font-size: var(--font-size-xs);
  justify-self:end;
  padding: 0;
}

.tag button::before
{
  color: rgb(var(--color-c));
  content: "[";
  font-size: var(--font-size-s);
}

.tag button::after
{
  color: rgb(var(--color-c));
  content: "]";
  font-size: var(--font-size-s);
}

/* @end */


/* @group note actions */

.actions 
{
  /*align-self: center;*/
  /*background: rgba(var(--color-b),1);*/
  font-size: var(--font-size-s);
  grid-area: actions;
  margin: 0 var(--pad);
  overflow-x:  scroll;
  position: relative;
  white-space: pre;
  width: auto;
}

.note .actions 
{
  align-self: center;
  background: rgba(var(--color-b),1);
  font-size: var(--font-size-s);
  grid-area: actions;
  margin: 0 var(--pad);
  overflow-x:  scroll;
  position: relative;
  white-space: pre;
  width: auto;
}

/*.note .actions > summary
{
  line-height: 1.5rem;
  padding: 0 var(--padm);
}

.note .actions[open] > summary
{
  display: inline-block;
  text-align: right;
}*/

.note .actions .butt
{
  /*color: rgb(var(--color-f));*/
  /*opacity: .4;*/
  padding-left: calc(var(--padm)/2);
}
/*
.in_view > .by > .actions > summary
{
  line-height: 1.5rem;
}*/

.note.root > .by .actions,
.in_view > .replies > .note > .by .actions 
{
  z-index: 3;
}


/* @end */


/* @group replies */

.replies
{
  grid-area: replies;
  padding-left: var(--padm);
}

.view_e .in_path:not(.in_view) > .replies,
.replies:not(.expanded) [data-level="11"]:not(.is_new):not(.haz_new_reply) .replies,
.replies:not(.expanded) .note:not(.is_new):not(.haz_new_reply) > .replies
{
  padding-left: 0;
}

html:not(.view_e) .replies:not(.expanded) .note:not(.is_new):not(.haz_new_reply) > *:not(.replies),
html:not(.view_e) .replies:not(.expanded) .note:not(.is_new):not(.haz_new_reply)::before,
html:not(.view_e) .replies:not(.expanded) .note:not(.is_new):not(.haz_new_reply)::after,
.note.out > .replies::after,
.haz_solo .note:not(.in_path) > .replies::after
{
  display: none;
}

/*.replies:not(.expanded) .note:not(.is_new):not(.haz_new_reply) > *:not(.replies),
.replies:not(.expanded) .note:not(.is_new):not(.haz_new_reply)::before,
.replies:not(.expanded) .note:not(.is_new):not(.haz_new_reply)::after,

{
  display: none;
}*/

.replies > summary
{
  background-color: rgb(var(--color-b));
  color: rgb(var(--color-d));
  display: none;
  grid-template-columns: 1fr auto;
  line-height: 1.5rem;
  z-index: 5; 
}

.haz_reply > .replies > summary,
.haz_new > .replies > summary
{
  display: grid;
}

.in_view > .replies > summary
{
  position: sticky;
  top: var(--line);
}

.root:not(.in_view) > .replies > summary
{
  position: sticky;
  top: 1rem;
}

.replies > summary::after
{
  content: "+";
  margin: 0 var(--pad);
}

.replies[open] > summary::after
{
  content: "-";
}

.replies:not(.expanded) .note:not(.is_new):not(.haz_new_reply) > .replies > summary,
.view_e .in_path:not(.in_view) > .replies[open] > summary,
.note.out > .replies > summary,
.haz_solo .haz_reply:not(.in_path) > .replies[open] > summary,
.haz_solo .root:not(.in_view):not(.in_path) > .replies > summary
{
  display: none;
}

.mark_read
{
  color: rgb(var(--color-c));
  padding: 0;
}

.replies.expanded > summary .mark_read::before
{
  content: "// ";  
}

.replies:not(.expanded) > summary .mark_read
{
  color: rgb(var(--color-no));
  text-align: left
}

.replies:not(.expanded) > summary .mark_read::before
{
  content: "/* ";  
}

.replies:not(.expanded) > summary .mark_read::after
{
  content: " read */";  
}

.in_view > .replies > summary .mark_read
{
  color: rgb(var(--color-d));
}

.in_view > .replies > summary .mark_read
{
  text-align: left;
}

/* @end */


/* @group blank */


.note.blank
{
  --c: var(--color-c);
}

.blank > .by::before
{
  content: "unknown";
  font-size: var(--font-size-s);
  grid-area: author;
  padding-left: var(--padm);
}

.blank > .by .created_at
{
  display: none;
}

.blank > .content
{
  font-size: var(--font-size-s);
}

.blank:not(.tiny)[data-nope]::before
{
  content: "trying: " attr(data-nope);
  font-size: var(--font-size-s);
  line-height: 1.5;
  padding: var(--pad);
  white-space: pre-wrap;
  word-break: break-word;
}

/* @end */


/* @group quote */

.note_quote
{
  border: 1px dashed rgba(var(--color-c),1);
  display: grid;
  margin: var(--pad);
  margin-bottom: var(--line);
  max-height: var(--media-height);
  max-width: 960px;
  overflow: hidden;
  position: relative;
}

.note_quote:last-child
{
  margin-bottom: var(--padm);
}

.note_quote_by
{
  background: rgb(var(--color-b));
  display: grid;
  font-size: var(--font-size-s);
  grid-area: unset;
  grid-template-areas: "author . id";
  grid-template-columns: auto 1fr auto;
  line-height: 1rem;
  position: sticky;
  top: 0;
  z-index: 1;
}

.note_quote_by .author .name
{
  background: none;
}

.note_quote_by .nostr_link
{
  justify-self: end;
  margin: 0 var(--pad);
}

.note_quote .paragraph
{
  font-size: var(--font-size-s);
  line-height: 1.5;
  padding: 0 var(--padm);
  padding: var(--padm);
}

.note_quote .content-img
{
  max-height: var(--size-l);
}

.in_view > .content .note_quote
{
  margin: var(--line);
  max-height: unset;
}

.root > .content .note_quote
{
  overflow-y:  scroll;
}

/* @end */


/* @group tiny */

.note.tiny
{
  margin: 0;
}

.note.tiny:last-child
{
  margin-bottom: 3px;
}

.note.root:not(.in_path).tiny 
{
  border-bottom: none;
  margin-bottom: 0;
  margin-top: 0;
}

.note.tiny:not(.in_view),
.note.in_view > .replies > .note.tiny
{
  /*grid-template-areas: ". by";*/
  /*grid-template-columns: auto 1fr;*/
}

.note.tiny:not(.in_view)::after
{
  align-self: center;
  color: rgb(var(--color-d));
  content: "k" attr(data-kind) !important;
  font-size: var(--font-size-s);
  grid-area: content;
  padding: 0 var(--padm);
  display: none;
}

.note.tiny:not(.in_view) > .by .author .name
{
  margin-left: 0;
  /*padding: 0;*/
}

.note.in_view > .replies > .note.tiny > .content,
.note.tiny:not(.in_view) > .content
{
  align-self: center;
  border-top: none;
  border-bottom: none;
  font-size: var(--font-size-s);
  padding: 0;
  padding-left: 5px;
  margin: 0!important;
  min-width: calc(1rem + 1px);
}

.note.tiny:not(.in_view) .paragraph
{
  line-height: 1;
  margin: 0;
  padding: 0;
}

.note.tiny:not(.in_view) > .content > *,
.note.tiny:not(.in_view) > .tags_wrapper,
.note.tiny:not(.in_path) > .replies,
.note.tiny:not(.in_view) > .by .author .picture,
.note.tiny:not(.in_view) > .by .author::before
{
  display: none;
}

.note.tiny > .by > .butt.tiny
{
  color: rgb(var(--color-no));
}

.note.tiny[data-kind="7"]
{
  border: none;
}

.note.tiny[data-kind="7"]:not(.in_view),
.note.in_view .note.tiny[data-kind="7"]
{
  grid-template-areas: "content by";
  grid-template-columns: auto 1fr;
}

.note.tiny[data-kind="7"]:not(.in_view) > .content
{
  font-family: Apple Color Emoji,"Segoe UI Emoji","Source Code Pro", monospace;
  font-variant-emoji: emoji;
  padding-left: 0;
  padding: 1px;  
}

.note.tiny[data-kind="7"]:not(.in_view) > .content > *
{
  display: block;
}

.note.tiny[data-kind="7"]:not(.in_view) > .content .content-img
{
  max-width: 1rem;
}

/*.note.tiny[data-kind="6"]:not(.in_view) > .content::before,
.note.tiny[data-kind="16"]:not(.in_view) > .content::before
{
  content: "reposted by ";
}*/

.note.tiny[data-kind="7"]:not(.in_view)::before,
.note.tiny[data-kind="7"]:not(.in_view)::after,
.note.tiny[data-kind="6"]:not(.in_view)::before,
.note.tiny[data-kind="6"]:not(.in_view)::after,
.note.tiny[data-kind="16"]:not(.in_view)::before,
.note.tiny[data-kind="16"]:not(.in_view)::after
{
  display: none;
}

.note.root.tiny:not(.in_view) > .tags_wrapper
{
  display: none;
}

.haz_solo .note:not(.in_path).tiny:last-child
{
  margin-bottom: 0;
}

/* @end */


/* @group pagination */

.pagination
{
  font-size: var(--font-size-l);
  margin: var(--line) 0;
  text-align: center;
}

#e:not(.expanded) .pagination,
.viewing .pagination,
html:not(.needs_pagin) .pagination
{
  display: none;
}

/* @end */

/* @group versions */

.note > .versions
{
  grid-area: versions;
  overflow: hidden;
  background: rgb(var(--color-a));
  position: relative;
  z-index: 4;
}

.versions > summary
{
  /*display: none;*/
  /*padding: var(--pad);*/
  font-size: 0!important;
}

.note .versions > .note
{
  grid-template-areas: "by replies";
  grid-template-columns: auto 61.8vw;
  margin: 0;
}

.note .versions > .note > .by
{
  align-self: start;
}

.versions > .note:not(.in_view) >*:not(.by):not(.replies),
.versions > .note:not(.in_view) > .by .author,
.versions > .note:not(.in_view)::after
{
  display: none;
}

/* @end */


@media screen and (min-width: 1025px) 
{
  html:not(.view_e) #notes
  {
    margin-left: var(--pad-l);
  }
  
  .note.root:not(.tiny):not(.in_path)::after
  {
    z-index: 2;
  }
  
  .note.root:not(.tiny):not(.in_path) > .content::after
  {
    margin-bottom: 3rem;
  }
  
  .mark_read:hover
  {
    background-color: rgba(var(--color-a),1);
    text-align: left;
  }
  
  .replies:not(.expanded) > summary .mark_read:hover::after,
  .mark_read:hover::after
  {
    content: " mark read";
  }
  
  .by:hover
  {
    z-index: 99;
  }
  
  .note:not(.in_path) > .by:hover + .content
  {
    background: rgb(var(--color-a));
  }

  .replies .note:not(.in_path) > .by:hover + .content
  {
    background: rgb(var(--color-a));
    position: sticky;
    top: calc( var(--size) - var(--pad));
    top: calc(var(--line * 3));
    z-index: 2;
  }
  
  .by .id:hover
  {
    opacity: 1;
  }
  
  .note > .actions
  {
    position: sticky;
    bottom: 4rem;
  }
  
  .note > .actions[open]
  {
    justify-content: end;
    text-align: right;
    width: auto;
  }
  
  .note > .actions:not([open]) > summary
  {
    text-align: right;
  }
  
  .note .by .actions .butt:hover
  {
    color: rgb(var(--color-e));
    opacity: 1;
  }
  
  .in_view > .replies > .note > .actions,
  .root:not(.in_path) > .actions
  {
    position: sticky;
    top: 1rem;
  }

}

@media screen and (max-width: 768px) 
{
  :root {
    /*--font-size: 14px;*/
  }
  
  .note,
  .note.root:not(.in_path),
  .note.in_view > .replies > .note,
  #notes > .note:not(.root):not(.in_path)
  {
    grid-template-areas: 
    "by       by"
    "content  content"
    "opentags opentags"
    "tags     actions"
    "after    after"
    "replies  replies"
    ;
    grid-template-columns: auto 1fr;
  }
  
  .note.root:not(.in_path)
  {
    border-bottom: 1px solid rgb(var(--color-c));
  }
  
  .root:not(.in_view):not(.in_path) > .content
  {
    overflow-y:  hidden;
    position: relative;
    top: 0;
  }
  
  .note summary
  {
    line-height: 3rem;
  }
  
  .note:not(.in_view) .tags_wrapper
  {
    display: none;
  }
  
  .note .actions
  {
    justify-self: end;
  }
  
  .note .actions:not([open]) summary
  {
    text-align: right;
  }
}